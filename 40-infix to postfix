// 40.	Implement a program to convert an infix expression to a postfix expression using a Stack.
#include <stdio.h>

int main() {
    char infix[100], postfix[100], stack[100];
    int i = 0, j = 0, top = -1;

    printf("Enter infix: ");
    scanf("%s", infix);

    while (infix[i] != '\0') {
        char ch = infix[i];

        // If operand, add to postfix
        if (ch >= 'A' && ch <= 'Z') {
            postfix[j++] = ch;
        }
        // If operator
        else {
            while (top != -1 && (stack[top] == '*' || stack[top] == '/' ||
                   (stack[top] == '+' || stack[top] == '-') && (ch == '+' || ch == '-'))) {
                postfix[j++] = stack[top--];
            }
            stack[++top] = ch;
        }

        i++;
    }

    // Pop remaining operators
    while (top != -1) {
        postfix[j++] = stack[top--];
    }

    postfix[j] = '\0';
    printf("Postfix: %s\n", postfix);

    return 0;
}
